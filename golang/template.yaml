apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: golang
  title: Golang
  description: Create a new golang docker project
  tags:
    - recommended
    - techdocs
    - golang
    - mkdocs
  links:
    - url: https://github.com/zzci/templates
      title: zzci template
  annotations:
    backstage.io/techdocs-ref: dir:.

spec:
  owner: gotabit/core
  type: services
  parameters:
    - title: Provide services information
      required:
        - name
        - description
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the service
          ui:field: EntityNamePicker
          ui:autofocus: true
        description:
          title: Description
          type: string
          description: A description for the service
        url:
          title: URL endpoint
          type: string
          description: URL endpoint at which the component can be reached
        title:
          title: Description
          type: string
          description: A title for URL endpoint
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: fetch
      name: Template golang Skeleton
      action: fetch:template
      input:
        url: ./skeleton
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          title: ${{ parameters.title }}
          url: ${{ parameters.url }}
          owner: ${{ user.entity.metadata.name }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
